@{
    ViewData["Title"] = "Location";
}

@model Warehouseweb2.Models.OverviewDetailsView;

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Warehouse Location Overview</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css">
    <link rel="stylesheet" href="~/css/location.css" asp-append-version="true" />
    <link href="https://fonts.googleapis.com/css2?family=Outfit&display=swap" rel="stylesheet">
</head>
<body>

     <div class="card-grid-container1">
     @foreach (var item in Model.Area)
            {
                <a asp-controller="Location" asp-action="Details" asp-route-locationId="@item.location_id" >
                    <div class="stat-card2" data-percentage="high"> 
                        <div class="status-dot2"></div>
                        <div class="card-content2">
                            <h4 class="card-title2">@item.location_name</h4>
                            <div class="card-value2"> @item.usage % </div>
                            <p class="card-description2">  Area </p>
                        </div>
                    </div>
                </a>
            }
        </div>

        <div class="last-update-container">
            Last update: <span id="last-update-time" class="last-update-text"></span>
        </div>
 

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const cards = document.querySelectorAll('.stat-card2');

            cards.forEach(card => {
                const valueElement = card.querySelector('.card-value2');
                const value = parseInt(valueElement.textContent);

                if (value >= 90) {
                    card.setAttribute('data-percentage', 'danger');
                } else if (value >= 80) {
                    card.setAttribute('data-percentage', 'high');
                } else if (value >= 40) {
                    card.setAttribute('data-percentage', 'medium');
                } else if (value >= 20) {
                    card.setAttribute('data-percentage', 'low');
                } else {
                    card.setAttribute('data-percentage', 'zero');
                }
            });

            function updateLastRefreshTime() {
                const now = new Date();
                const options = {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric',
                    hour: '2-digit',
                    minute: '2-digit',
                    second: '2-digit',
                    hour12: false
                };
                const formattedTime = now.toLocaleDateString('en-GB', options) + ' ';
                document.getElementById('last-update-time').textContent = formattedTime;
            }


            updateLastRefreshTime();

        });
    </script>
</body>
</html>